<?xml version="1.0" encoding="UTF-8"?>
<mt:ResourceSet xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:core="http://www.eclipse.org/acceleo/mt/2.6.0/core" xmlns:expressions="http://www.eclipse.org/acceleo/mt/2.6.0/expressions" xmlns:mt="http://www.eclipse.org/acceleo/mt/2.6.0" xmlns:statements="http://www.eclipse.org/acceleo/mt/2.6.0/statements">
  <resources xsi:type="core:Template" name="pck.genTestSelect" imports="//@resources.1" beginTag="&lt;%" endTag="%>">
    <scripts begin="164" end="803">
      <descriptor begin="116" end="160" name="generate" type="Class">
        <file>
          <statements xsi:type="statements:Text" begin="151" end="159" value="test.txt"/>
        </file>
      </descriptor>
      <statements xsi:type="statements:Text" begin="164" end="199" value="== Sample of text ==&#xD;&#xA;&#xD;&#xA;=Start=&#xD;&#xA;&#xD;&#xA;"/>
      <statements xsi:type="statements:For" begin="205" end="252">
        <iterator xsi:type="expressions:Parenthesis" begin="205" end="238">
          <expression xsi:type="expressions:CallSet" begin="206" end="237">
            <calls begin="206" end="215" name="attribute" prefix="">
              <filter xsi:type="expressions:CallSet" begin="216" end="236">
                <calls begin="216" end="220" name="name" prefix=""/>
                <calls begin="221" end="236" name="startsWith" prefix="">
                  <arguments xsi:type="expressions:StringLiteral" begin="232" end="235" value="a"/>
                </calls>
              </filter>
            </calls>
          </expression>
        </iterator>
        <statements xsi:type="statements:Feature" begin="245" end="249">
          <expression xsi:type="expressions:CallSet" begin="245" end="249">
            <calls begin="245" end="249" name="name" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="251" end="252" value="&#xA;"/>
      </statements>
      <statements xsi:type="statements:Text" begin="258" end="260" value="&#xD;&#xA;"/>
      <statements xsi:type="statements:For" begin="266" end="309">
        <iterator xsi:type="expressions:Parenthesis" begin="266" end="294">
          <expression xsi:type="expressions:CallSet" begin="267" end="293">
            <calls begin="267" end="276" name="attribute" prefix="">
              <filter xsi:type="expressions:Operator" begin="277" end="292" operator="==">
                <operands xsi:type="expressions:CallSet" begin="277" end="281">
                  <calls begin="277" end="281" name="name" prefix=""/>
                </operands>
                <operands xsi:type="expressions:StringLiteral" begin="285" end="292" value="aName"/>
              </filter>
            </calls>
          </expression>
        </iterator>
        <statements xsi:type="statements:Feature" begin="301" end="305">
          <expression xsi:type="expressions:CallSet" begin="301" end="305">
            <calls begin="301" end="305" name="name" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="307" end="309" value="&#xD;&#xA;"/>
      </statements>
      <statements xsi:type="statements:Text" begin="316" end="318" value="&#xD;&#xA;"/>
      <statements xsi:type="statements:For" begin="324" end="381">
        <iterator xsi:type="expressions:Parenthesis" begin="324" end="366">
          <expression xsi:type="expressions:CallSet" begin="325" end="365">
            <calls begin="325" end="334" name="attribute" prefix=""/>
            <calls begin="335" end="365" name="select" prefix="">
              <arguments xsi:type="expressions:StringLiteral" begin="342" end="364" value="name.startsWith('a')"/>
            </calls>
          </expression>
        </iterator>
        <statements xsi:type="statements:Feature" begin="373" end="377">
          <expression xsi:type="expressions:CallSet" begin="373" end="377">
            <calls begin="373" end="377" name="name" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="379" end="381" value="&#xD;&#xA;"/>
      </statements>
      <statements xsi:type="statements:Text" begin="388" end="390" value="&#xD;&#xA;"/>
      <statements xsi:type="statements:Feature" begin="392" end="427">
        <expression xsi:type="expressions:CallSet" begin="392" end="427">
          <calls begin="392" end="401" name="attribute" prefix="">
            <filter xsi:type="expressions:Operator" begin="402" end="417" operator="==">
              <operands xsi:type="expressions:CallSet" begin="402" end="406">
                <calls begin="402" end="406" name="name" prefix=""/>
              </operands>
              <operands xsi:type="expressions:StringLiteral" begin="410" end="417" value="aName"/>
            </filter>
          </calls>
          <calls begin="419" end="427" name="sep" prefix="">
            <arguments xsi:type="expressions:StringLiteral" begin="423" end="426" value=","/>
          </calls>
        </expression>
      </statements>
      <statements xsi:type="statements:Text" begin="429" end="433" value="&#xD;&#xA;&#xD;&#xA;"/>
      <statements xsi:type="statements:Feature" begin="435" end="479">
        <expression xsi:type="expressions:CallSet" begin="435" end="479">
          <calls begin="435" end="444" name="attribute" prefix=""/>
          <calls begin="445" end="470" name="select" prefix="">
            <arguments xsi:type="expressions:StringLiteral" begin="452" end="469" value="name == 'aName'"/>
          </calls>
          <calls begin="471" end="479" name="sep" prefix="">
            <arguments xsi:type="expressions:StringLiteral" begin="475" end="478" value=","/>
          </calls>
        </expression>
      </statements>
      <statements xsi:type="statements:Text" begin="481" end="487" value="&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;"/>
      <statements xsi:type="statements:If" begin="492" end="612">
        <condition xsi:type="expressions:Parenthesis" begin="492" end="550">
          <expression xsi:type="expressions:Operator" begin="493" end="549" operator=">">
            <operands xsi:type="expressions:CallSet" begin="493" end="545">
              <calls begin="493" end="502" name="attribute" prefix=""/>
              <calls begin="503" end="537" name="select" prefix="">
                <arguments xsi:type="expressions:StringLiteral" begin="510" end="536" value="upper == -1 || upper > 1"/>
              </calls>
              <calls begin="538" end="545" name="nSize" prefix=""/>
            </operands>
            <operands xsi:type="expressions:IntegerLiteral" begin="548" end="549"/>
          </expression>
        </condition>
        <thenStatements xsi:type="statements:Text" begin="555" end="612" value="import java.util.Collection;&#xD;&#xA;import java.util.HashSet;&#xD;&#xA;"/>
      </statements>
      <statements xsi:type="statements:Text" begin="619" end="621" value="&#xD;&#xA;"/>
      <statements xsi:type="statements:For" begin="627" end="705">
        <iterator xsi:type="expressions:Parenthesis" begin="627" end="689">
          <expression xsi:type="expressions:CallSet" begin="628" end="688">
            <calls begin="628" end="642" name="ownedOperation" prefix=""/>
            <calls begin="643" end="688" name="select" prefix="">
              <arguments xsi:type="expressions:StringLiteral" begin="650" end="687" value="!hasStereotype(getProperty('find'))"/>
            </calls>
          </expression>
        </iterator>
        <statements xsi:type="statements:Text" begin="695" end="696" value="&#x9;"/>
        <statements xsi:type="statements:Feature" begin="698" end="702">
          <expression xsi:type="expressions:CallSet" begin="698" end="702">
            <calls begin="698" end="702" name="name" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="704" end="705" value="&#xA;"/>
      </statements>
      <statements xsi:type="statements:Text" begin="711" end="713" value="&#xD;&#xA;"/>
      <statements xsi:type="statements:For" begin="719" end="789">
        <iterator xsi:type="expressions:Parenthesis" begin="719" end="772">
          <expression xsi:type="expressions:CallSet" begin="720" end="771">
            <calls begin="720" end="734" name="ownedOperation" prefix="">
              <filter xsi:type="expressions:Not" begin="735" end="770">
                <expression xsi:type="expressions:CallSet" begin="736" end="770">
                  <calls begin="736" end="770" name="hasStereotype" prefix="">
                    <arguments xsi:type="expressions:CallSet" begin="750" end="769">
                      <calls begin="750" end="769" name="getProperty" prefix="">
                        <arguments xsi:type="expressions:StringLiteral" begin="762" end="768" value="find"/>
                      </calls>
                    </arguments>
                  </calls>
                </expression>
              </filter>
            </calls>
          </expression>
        </iterator>
        <statements xsi:type="statements:Text" begin="778" end="779" value="&#x9;"/>
        <statements xsi:type="statements:Feature" begin="781" end="785">
          <expression xsi:type="expressions:CallSet" begin="781" end="785">
            <calls begin="781" end="785" name="name" prefix=""/>
          </expression>
        </statements>
        <statements xsi:type="statements:Text" begin="787" end="789" value="&#xD;&#xA;"/>
      </statements>
      <statements xsi:type="statements:Text" begin="796" end="803" value="&#xD;&#xA;=End="/>
    </scripts>
    <scripts begin="857" end="916">
      <descriptor begin="816" end="853" name="hasStereotype" type="Operation">
        <file/>
      </descriptor>
      <statements xsi:type="statements:If" begin="862" end="911">
        <condition xsi:type="expressions:Parenthesis" begin="862" end="881">
          <expression xsi:type="expressions:Operator" begin="863" end="880" operator="==">
            <operands xsi:type="expressions:CallSet" begin="863" end="870">
              <calls begin="863" end="870" name="args" prefix="">
                <arguments xsi:type="expressions:IntegerLiteral" begin="868" end="869"/>
              </calls>
            </operands>
            <operands xsi:type="expressions:StringLiteral" begin="874" end="880" value="true"/>
          </expression>
        </condition>
        <thenStatements xsi:type="statements:Feature" begin="886" end="890">
          <expression xsi:type="expressions:BooleanLiteral" begin="886" end="890" value="true"/>
        </thenStatements>
        <elseStatements xsi:type="statements:Feature" begin="904" end="909">
          <expression xsi:type="expressions:BooleanLiteral" begin="904" end="909"/>
        </elseStatements>
      </statements>
    </scripts>
    <scripts begin="967" end="986">
      <descriptor begin="929" end="963" name="mySelectScript" type="Class">
        <file/>
      </descriptor>
      <statements xsi:type="statements:Text" begin="967" end="986" value="MySelectScript Text"/>
    </scripts>
  </resources>
  <resources xsi:type="core:Metamodel" name="http://www.eclipse.org/uml2/2.0.0/UML"/>
</mt:ResourceSet>
